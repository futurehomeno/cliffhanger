// Code generated by mockery v2.23.0. DO NOT EDIT.

package mockednumericmeter

import (
	numericmeter "github.com/futurehomeno/cliffhanger/adapter/service/numericmeter"
	mock "github.com/stretchr/testify/mock"
)

// ExportReporter is an autogenerated mock type for the ExportReporter type
type ExportReporter struct {
	mock.Mock
}

// MeterExportReport provides a mock function with given fields: unit
func (_m *ExportReporter) MeterExportReport(unit numericmeter.Unit) (float64, error) {
	ret := _m.Called(unit)

	var r0 float64
	var r1 error
	if rf, ok := ret.Get(0).(func(numericmeter.Unit) (float64, error)); ok {
		return rf(unit)
	}
	if rf, ok := ret.Get(0).(func(numericmeter.Unit) float64); ok {
		r0 = rf(unit)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(numericmeter.Unit) error); ok {
		r1 = rf(unit)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExportReporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewExportReporter creates a new instance of ExportReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExportReporter(t mockConstructorTestingTNewExportReporter) *ExportReporter {
	mock := &ExportReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
