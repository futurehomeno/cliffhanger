// Code generated by mockery v2.35.1. DO NOT EDIT.

package mockedoutlvlswitch

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// LevelTransitionController is an autogenerated mock type for the LevelTransitionController type
type LevelTransitionController struct {
	mock.Mock
}

// StartLevelTransition provides a mock function with given fields: _a0, _a1, _a2
func (_m *LevelTransitionController) StartLevelTransition(_a0 string, _a1 int, _a2 time.Duration) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int, time.Duration) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StopLevelTransition provides a mock function with given fields:
func (_m *LevelTransitionController) StopLevelTransition() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewLevelTransitionController creates a new instance of LevelTransitionController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLevelTransitionController(t interface {
	mock.TestingT
	Cleanup(func())
}) *LevelTransitionController {
	mock := &LevelTransitionController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
